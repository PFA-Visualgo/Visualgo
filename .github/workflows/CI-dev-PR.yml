# This is a basic workflow to help you get started with Actions

name: CI-dev-PR

# https://docs.github.com/en/actions/using-jobs/using-jobs-in-a-workflow

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "dev" branch
  pull_request:
    branches: ["dev"]

  # Allows you to run this workflow manually from the Actions tab, only possible if this file is in the default branch (aka master)
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"

  create-commit-status:
    name: Update Commit Status
    needs: [static-analysis, build, tests]
    runs-on: ubuntu-latest
    steps:
      - name: All previous jobs succeeded
        run: echo "All jobs succeeded!"

      # - name: Set status checks
      #   run: |
      #     # Set a success status check
      #     echo "::set-output name=DEV_PR_CHECK_STATUS::success"

      #   id: set-check-status

      - name: Update commit check
        run: |
          # Extract the commit SHA from the GITHUB_SHA environment variable
          COMMIT_SHA=${GITHUB_SHA}

          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/PFA-Visualgo/Visualgo/check-runs \
            -d '{"name":"success dev PR","head_sha":"$COMMIT_SHA","status":"in_progress","conclusion":"success","output":{"title":"All dev checks passed","summary":"All dev checks passed","text":"All dev checks passed"}}'


  static-analysis:
    name: Static Analysis

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      # - name: Install dependencies
      #   run: |
      #     python -m pip install --upgrade pip
      #     pip install flake8 pytest

      # - name: Lint with flake8
      #   run: |
      #     flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
      #     flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

  build:
    name: Build
    needs: [static-analysis]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build

      - name: Build package
        run: python -m build

  tests:
    name: Tests
    needs: [static-analysis, build]

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          echo "pip install requirements.txt"

      - name: Run tests
        run: echo "python -m  pytest"

  update-commit-status:
    name: Update Commit Status
    needs: [static-analysis, build, tests]
    runs-on: ubuntu-latest
    steps:
      - name: All previous jobs succeeded
        run: echo "All jobs succeeded!"

      # - name: Set status checks
      #   run: |
      #     # Set a success status check
      #     echo "::set-output name=DEV_PR_CHECK_STATUS::success"

      #   id: set-check-status

      - name: Update commit check
        run: |
          # Extract the commit SHA from the GITHUB_SHA environment variable
          COMMIT_SHA=${GITHUB_SHA}

          curl -L \
            -X POST \
            -H "Accept: application/vnd.github+json" \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            -H "X-GitHub-Api-Version: 2022-11-28" \
            https://api.github.com/repos/PFA-Visualgo/Visualgo/check-runs \
            -d '{"name":"success dev PR","head_sha":"$COMMIT_SHA","status":"completed","conclusion":"success","output":{"title":"All dev checks passed","summary":"All dev checks passed","text":"All dev checks passed"}}'

      # - name: Update commit status
      #   run: |
      #     # Extract the commit SHA from the GITHUB_SHA environment variable
      #     COMMIT_SHA=${GITHUB_SHA}

      #     # https://michaelheap.com/ultimate-guide-github-actions-authentication/

      #     # Use the GitHub Status API to update the commit status
      #     curl -L \
      #       -H "Accept: application/vnd.github+json" \
      #       -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
      #       -H "X-GitHub-Api-Version: 2022-11-28" \
      #       -d '{"state": "success dev PR", "description": "All dev checks passed", "context": "ci/all-checks-dev"}' \
      #       https://api.github.com/repos/PFA-Visualgo/Visualgo/commits/$COMMIT_SHA/status
